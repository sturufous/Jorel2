package ca.bc.gov.tno.jorel2.model;
// Generated Dec 24, 2019, 8:06:31 AM by Hibernate Tools 5.0.6.Final

import java.math.BigDecimal;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.Session;
import org.hibernate.query.Query;

/**
 * Sources generated by hbm2java
 */
@Entity
@Table(name = "SOURCES", schema = "TNO")
public class SourcesDao implements java.io.Serializable {

	private BigDecimal rsn;
	private String source;
	private String abbr;
	private String shortName;
	private String bannerName;
	private Double imageOffset;
	private BigDecimal sortOrder;
	private Double imageHeight;
	private Boolean cbraInclude;
	private BigDecimal truncHeadline;
	private BigDecimal expireDays;
	private Boolean tvarchive;
	private BigDecimal tabSortOrder;
	private String frequency;
	private BigDecimal reachMon;
	private Boolean provincewide;
	private BigDecimal reachTue;
	private BigDecimal reachWed;
	private BigDecimal reachThu;
	private BigDecimal reachFri;
	private BigDecimal reachSat;
	private BigDecimal reachSun;
	private BigDecimal adValueMon;
	private BigDecimal adValueTue;
	private BigDecimal adValueWed;
	private BigDecimal adValueThu;
	private BigDecimal adValueFri;
	private BigDecimal adValueSat;
	private BigDecimal adValueSun;
	private Boolean useInAnalysis;
	private BigDecimal charsPerColumnInch;
	private String commonCall;
	private String smExceptionString;
	private Boolean useInEod;
	private String eodPages;
	private String eodSections;
	private String eodType;
	private BigDecimal eodAnalytics;

	public SourcesDao() {
	}

	public SourcesDao(BigDecimal rsn) {
		this.rsn = rsn;
	}

	public SourcesDao(BigDecimal rsn, String source, String abbr, String shortName, String bannerName, Double imageOffset,
			BigDecimal sortOrder, Double imageHeight, Boolean cbraInclude, BigDecimal truncHeadline,
			BigDecimal expireDays, Boolean tvarchive, BigDecimal tabSortOrder, String frequency, BigDecimal reachMon,
			Boolean provincewide, BigDecimal reachTue, BigDecimal reachWed, BigDecimal reachThu, BigDecimal reachFri,
			BigDecimal reachSat, BigDecimal reachSun, BigDecimal adValueMon, BigDecimal adValueTue,
			BigDecimal adValueWed, BigDecimal adValueThu, BigDecimal adValueFri, BigDecimal adValueSat,
			BigDecimal adValueSun, Boolean useInAnalysis, BigDecimal charsPerColumnInch, String commonCall,
			String smExceptionString, Boolean useInEod, String eodPages, String eodSections, String eodType,
			BigDecimal eodAnalytics) {
		this.rsn = rsn;
		this.source = source;
		this.abbr = abbr;
		this.shortName = shortName;
		this.bannerName = bannerName;
		this.imageOffset = imageOffset;
		this.sortOrder = sortOrder;
		this.imageHeight = imageHeight;
		this.cbraInclude = cbraInclude;
		this.truncHeadline = truncHeadline;
		this.expireDays = expireDays;
		this.tvarchive = tvarchive;
		this.tabSortOrder = tabSortOrder;
		this.frequency = frequency;
		this.reachMon = reachMon;
		this.provincewide = provincewide;
		this.reachTue = reachTue;
		this.reachWed = reachWed;
		this.reachThu = reachThu;
		this.reachFri = reachFri;
		this.reachSat = reachSat;
		this.reachSun = reachSun;
		this.adValueMon = adValueMon;
		this.adValueTue = adValueTue;
		this.adValueWed = adValueWed;
		this.adValueThu = adValueThu;
		this.adValueFri = adValueFri;
		this.adValueSat = adValueSat;
		this.adValueSun = adValueSun;
		this.useInAnalysis = useInAnalysis;
		this.charsPerColumnInch = charsPerColumnInch;
		this.commonCall = commonCall;
		this.smExceptionString = smExceptionString;
		this.useInEod = useInEod;
		this.eodPages = eodPages;
		this.eodSections = eodSections;
		this.eodType = eodType;
		this.eodAnalytics = eodAnalytics;
	}

	@Id

	@Column(name = "RSN", unique = true, nullable = false, precision = 38, scale = 0)
	public BigDecimal getRsn() {
		return this.rsn;
	}

	public void setRsn(BigDecimal rsn) {
		this.rsn = rsn;
	}

	@Column(name = "SOURCE", length = 100)
	public String getSource() {
		return this.source;
	}

	public void setSource(String source) {
		this.source = source;
	}

	@Column(name = "ABBR", length = 20)
	public String getAbbr() {
		return this.abbr;
	}

	public void setAbbr(String abbr) {
		this.abbr = abbr;
	}

	@Column(name = "SHORT_NAME", length = 50)
	public String getShortName() {
		return this.shortName;
	}

	public void setShortName(String shortName) {
		this.shortName = shortName;
	}

	@Column(name = "BANNER_NAME", length = 50)
	public String getBannerName() {
		return this.bannerName;
	}

	public void setBannerName(String bannerName) {
		this.bannerName = bannerName;
	}

	@Column(name = "IMAGE_OFFSET", precision = 63, scale = 0)
	public Double getImageOffset() {
		return this.imageOffset;
	}

	public void setImageOffset(Double imageOffset) {
		this.imageOffset = imageOffset;
	}

	@Column(name = "SORT_ORDER", precision = 38, scale = 0)
	public BigDecimal getSortOrder() {
		return this.sortOrder;
	}

	public void setSortOrder(BigDecimal sortOrder) {
		this.sortOrder = sortOrder;
	}

	@Column(name = "IMAGE_HEIGHT", precision = 63, scale = 0)
	public Double getImageHeight() {
		return this.imageHeight;
	}

	public void setImageHeight(Double imageHeight) {
		this.imageHeight = imageHeight;
	}

	@Column(name = "CBRA_INCLUDE", precision = 1, scale = 0)
	public Boolean getCbraInclude() {
		return this.cbraInclude;
	}

	public void setCbraInclude(Boolean cbraInclude) {
		this.cbraInclude = cbraInclude;
	}

	@Column(name = "TRUNC_HEADLINE", precision = 38, scale = 0)
	public BigDecimal getTruncHeadline() {
		return this.truncHeadline;
	}

	public void setTruncHeadline(BigDecimal truncHeadline) {
		this.truncHeadline = truncHeadline;
	}

	@Column(name = "EXPIRE_DAYS", precision = 38, scale = 0)
	public BigDecimal getExpireDays() {
		return this.expireDays;
	}

	public void setExpireDays(BigDecimal expireDays) {
		this.expireDays = expireDays;
	}

	@Column(name = "TVARCHIVE", precision = 1, scale = 0)
	public Boolean getTvarchive() {
		return this.tvarchive;
	}

	public void setTvarchive(Boolean tvarchive) {
		this.tvarchive = tvarchive;
	}

	@Column(name = "TAB_SORT_ORDER", precision = 38, scale = 0)
	public BigDecimal getTabSortOrder() {
		return this.tabSortOrder;
	}

	public void setTabSortOrder(BigDecimal tabSortOrder) {
		this.tabSortOrder = tabSortOrder;
	}

	@Column(name = "FREQUENCY", length = 50)
	public String getFrequency() {
		return this.frequency;
	}

	public void setFrequency(String frequency) {
		this.frequency = frequency;
	}

	@Column(name = "REACH_MON", precision = 38)
	public BigDecimal getReachMon() {
		return this.reachMon;
	}

	public void setReachMon(BigDecimal reachMon) {
		this.reachMon = reachMon;
	}

	@Column(name = "PROVINCEWIDE", precision = 1, scale = 0)
	public Boolean getProvincewide() {
		return this.provincewide;
	}

	public void setProvincewide(Boolean provincewide) {
		this.provincewide = provincewide;
	}

	@Column(name = "REACH_TUE", precision = 38)
	public BigDecimal getReachTue() {
		return this.reachTue;
	}

	public void setReachTue(BigDecimal reachTue) {
		this.reachTue = reachTue;
	}

	@Column(name = "REACH_WED", precision = 38)
	public BigDecimal getReachWed() {
		return this.reachWed;
	}

	public void setReachWed(BigDecimal reachWed) {
		this.reachWed = reachWed;
	}

	@Column(name = "REACH_THU", precision = 38)
	public BigDecimal getReachThu() {
		return this.reachThu;
	}

	public void setReachThu(BigDecimal reachThu) {
		this.reachThu = reachThu;
	}

	@Column(name = "REACH_FRI", precision = 38)
	public BigDecimal getReachFri() {
		return this.reachFri;
	}

	public void setReachFri(BigDecimal reachFri) {
		this.reachFri = reachFri;
	}

	@Column(name = "REACH_SAT", precision = 38)
	public BigDecimal getReachSat() {
		return this.reachSat;
	}

	public void setReachSat(BigDecimal reachSat) {
		this.reachSat = reachSat;
	}

	@Column(name = "REACH_SUN", precision = 38)
	public BigDecimal getReachSun() {
		return this.reachSun;
	}

	public void setReachSun(BigDecimal reachSun) {
		this.reachSun = reachSun;
	}

	@Column(name = "AD_VALUE_MON", precision = 38)
	public BigDecimal getAdValueMon() {
		return this.adValueMon;
	}

	public void setAdValueMon(BigDecimal adValueMon) {
		this.adValueMon = adValueMon;
	}

	@Column(name = "AD_VALUE_TUE", precision = 38)
	public BigDecimal getAdValueTue() {
		return this.adValueTue;
	}

	public void setAdValueTue(BigDecimal adValueTue) {
		this.adValueTue = adValueTue;
	}

	@Column(name = "AD_VALUE_WED", precision = 38)
	public BigDecimal getAdValueWed() {
		return this.adValueWed;
	}

	public void setAdValueWed(BigDecimal adValueWed) {
		this.adValueWed = adValueWed;
	}

	@Column(name = "AD_VALUE_THU", precision = 38)
	public BigDecimal getAdValueThu() {
		return this.adValueThu;
	}

	public void setAdValueThu(BigDecimal adValueThu) {
		this.adValueThu = adValueThu;
	}

	@Column(name = "AD_VALUE_FRI", precision = 38)
	public BigDecimal getAdValueFri() {
		return this.adValueFri;
	}

	public void setAdValueFri(BigDecimal adValueFri) {
		this.adValueFri = adValueFri;
	}

	@Column(name = "AD_VALUE_SAT", precision = 38)
	public BigDecimal getAdValueSat() {
		return this.adValueSat;
	}

	public void setAdValueSat(BigDecimal adValueSat) {
		this.adValueSat = adValueSat;
	}

	@Column(name = "AD_VALUE_SUN", precision = 38)
	public BigDecimal getAdValueSun() {
		return this.adValueSun;
	}

	public void setAdValueSun(BigDecimal adValueSun) {
		this.adValueSun = adValueSun;
	}

	@Column(name = "USE_IN_ANALYSIS", precision = 1, scale = 0)
	public Boolean getUseInAnalysis() {
		return this.useInAnalysis;
	}

	public void setUseInAnalysis(Boolean useInAnalysis) {
		this.useInAnalysis = useInAnalysis;
	}

	@Column(name = "CHARS_PER_COLUMN_INCH", precision = 38, scale = 0)
	public BigDecimal getCharsPerColumnInch() {
		return this.charsPerColumnInch;
	}

	public void setCharsPerColumnInch(BigDecimal charsPerColumnInch) {
		this.charsPerColumnInch = charsPerColumnInch;
	}

	@Column(name = "COMMON_CALL", length = 100)
	public String getCommonCall() {
		return this.commonCall;
	}

	public void setCommonCall(String commonCall) {
		this.commonCall = commonCall;
	}

	@Column(name = "SM_EXCEPTION_STRING", length = 100)
	public String getSmExceptionString() {
		return this.smExceptionString;
	}

	public void setSmExceptionString(String smExceptionString) {
		this.smExceptionString = smExceptionString;
	}

	@Column(name = "USE_IN_EOD", precision = 1, scale = 0)
	public Boolean getUseInEod() {
		return this.useInEod;
	}

	public void setUseInEod(Boolean useInEod) {
		this.useInEod = useInEod;
	}

	@Column(name = "EOD_PAGES", length = 100)
	public String getEodPages() {
		return this.eodPages;
	}

	public void setEodPages(String eodPages) {
		this.eodPages = eodPages;
	}

	@Column(name = "EOD_SECTIONS", length = 250)
	public String getEodSections() {
		return this.eodSections;
	}

	public void setEodSections(String eodSections) {
		this.eodSections = eodSections;
	}

	@Column(name = "EOD_TYPE", length = 40)
	public String getEodType() {
		return this.eodType;
	}

	public void setEodType(String eodType) {
		this.eodType = eodType;
	}

	@Column(name = "EOD_ANALYTICS", precision = 38)
	public BigDecimal getEodAnalytics() {
		return this.eodAnalytics;
	}

	public void setEodAnalytics(BigDecimal eodAnalytics) {
		this.eodAnalytics = eodAnalytics;
	}
	
	/**
	 * Get the sources record matchig the source parameter. 
	 * 
	 * @param source The source for the record to match.
	 * @param session The current Hibernate persistence context
	 * @return A list containing the single matching record, or empty if no match.
	 */
	public static List<SourcesDao> getItemBySource(String source, Session session) {
		
		String sqlStmt = "from SourcesDao s where s.source =:source";

		Query<SourcesDao> query = session.createQuery(sqlStmt, SourcesDao.class);
		query.setParameter("source", source);
        List<SourcesDao> results = query.getResultList();
        
		return results;
	}
	
	/**
	 * Get the source rsn in sources matching the import filename in news_items
	 * 
	 * @param fileName The importedfrom value for the record to match.
	 * @param session The current Hibernate persistence context
	 * @return A list containing the single matching record, or empty if no match.
	 */
	public static List<Object[]> getRsnByImportFilename(String fileName, Session session) {
		//select s.rsn from tno.news_items n, sources s where s.source = n.source and n.importedfrom = ?		
		String sqlStmt = "from NewsItemsDao n, SourcesDao s where s.source = n.source and n.importedfrom=:fileName";

		Query<Object[]> query = session.createQuery(sqlStmt);
		query.setParameter("fileName", fileName.toUpperCase());
        List<Object[]> results = query.getResultList();
        
		return results;
	}

}
