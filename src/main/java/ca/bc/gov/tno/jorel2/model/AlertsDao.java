package ca.bc.gov.tno.jorel2.model;
// Generated Dec 24, 2019, 8:06:31 AM by Hibernate Tools 5.0.6.Final

import java.math.BigDecimal;
import java.sql.Clob;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.Session;
import org.hibernate.query.Query;

/**
 * Alerts generated by hbm2java
 */
@Entity
@Table(name = "ALERTS", schema = "TNO")
public class AlertsDao implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private BigDecimal rsn;
	private BigDecimal userRsn;
	private String alertName;
	private Date dateCreated;
	private Date dateModified;
	private Date lastExecuted;
	private Date lastExecuted2;
	private Date lastExecuted3;
	private Clob alertData;
	private String sqlWhere;
	private String words;
	private Boolean status;

	public AlertsDao() {
	}

	public AlertsDao(BigDecimal rsn) {
		this.rsn = rsn;
	}

	public AlertsDao(BigDecimal rsn, BigDecimal userRsn, String alertName, Date dateCreated, Date dateModified,
			Date lastExecuted, Date lastExecuted2, Date lastExecuted3, Clob alertData, String sqlWhere, String words,
			Boolean status) {
		this.rsn = rsn;
		this.userRsn = userRsn;
		this.alertName = alertName;
		this.dateCreated = dateCreated;
		this.dateModified = dateModified;
		this.lastExecuted = lastExecuted;
		this.lastExecuted2 = lastExecuted2;
		this.lastExecuted3 = lastExecuted3;
		this.alertData = alertData;
		this.sqlWhere = sqlWhere;
		this.words = words;
		this.status = status;
	}

	@Id

	@Column(name = "RSN", unique = true, nullable = false, precision = 38, scale = 0)
	public BigDecimal getRsn() {
		return this.rsn;
	}

	public void setRsn(BigDecimal rsn) {
		this.rsn = rsn;
	}

	@Column(name = "USER_RSN", precision = 38, scale = 0)
	public BigDecimal getUserRsn() {
		return this.userRsn;
	}

	public void setUserRsn(BigDecimal userRsn) {
		this.userRsn = userRsn;
	}

	@Column(name = "ALERT_NAME", length = 100)
	public String getAlertName() {
		return this.alertName;
	}

	public void setAlertName(String alertName) {
		this.alertName = alertName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_CREATED", length = 7)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_MODIFIED", length = 7)
	public Date getDateModified() {
		return this.dateModified;
	}

	public void setDateModified(Date dateModified) {
		this.dateModified = dateModified;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "LAST_EXECUTED", length = 7)
	public Date getLastExecuted() {
		return this.lastExecuted;
	}

	public void setLastExecuted(Date lastExecuted) {
		this.lastExecuted = lastExecuted;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "LAST_EXECUTED2", length = 7)
	public Date getLastExecuted2() {
		return this.lastExecuted2;
	}

	public void setLastExecuted2(Date lastExecuted2) {
		this.lastExecuted2 = lastExecuted2;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "LAST_EXECUTED3", length = 7)
	public Date getLastExecuted3() {
		return this.lastExecuted3;
	}

	public void setLastExecuted3(Date lastExecuted3) {
		this.lastExecuted3 = lastExecuted3;
	}

	@Column(name = "ALERT_DATA")
	public Clob getAlertData() {
		return this.alertData;
	}

	public void setAlertData(Clob alertData) {
		this.alertData = alertData;
	}

	@Column(name = "SQL_WHERE", length = 2000)
	public String getSqlWhere() {
		return this.sqlWhere;
	}

	public void setSqlWhere(String sqlWhere) {
		this.sqlWhere = sqlWhere;
	}

	@Column(name = "WORDS", length = 2000)
	public String getWords() {
		return this.words;
	}

	public void setWords(String words) {
		this.words = words;
	}

	@Column(name = "STATUS", precision = 1, scale = 0)
	public Boolean getStatus() {
		return this.status;
	}

	public void setStatus(Boolean status) {
		this.status = status;
	}
	
	/**
	 * Update the last executed column in the ALERTS table record that matches the rsn parameter.
	 * 
	 * @param rsnList The list of NEWS_ITEMS rsn to clear.
	 * @param useLastDoSyncIndex Use the date in LastDoSyncIndexDao to filter the list of records updated.
	 * @param session
	 */
	public static void updateLastExecuted(String rsn, Session session){

		String sqlStmt = "update AlertsDao set lastExecuted = current_date, lastExecuted2 = lastExecuted, lastExecuted3 = lastExecuted2 where rsn = :rsn";

		Query<?> query = session.createQuery(sqlStmt);
		query.setParameter("rsn", new BigDecimal(rsn));
		session.beginTransaction();
		query.executeUpdate();
		session.getTransaction().commit();
	}

}
